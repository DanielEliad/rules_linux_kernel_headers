
module(
    name = "linux_kernel_headers",
    version = "0.0.1",
    compatibility_level = 1,
)

bazel_dep(name = "bazel_skylib", version = "1.2.1")
bazel_dep(name = "rules_foreign_cc", version = "0.9.0")


# Telling the extension to fetch these kernels doesn't actually download them
# not even into the cache
# you can check this using a non existent version 4.14.1559
# both here in the extension configuration and in the use_repo CONFIG_ALLOW_DEV_COREDUMP
# as long as it is not in the buildgraph it is not evaluated
# The examples/bzlmod module gave another version "4.14.154" that this module did not know and therefore extended it
kernel_versions_integrity = {
    "4.14.151": "9b481473b29e63b332ef3d62c08462489ccfcd12638b1279c5aba81065002132",
    "4.14.153": "c6f5dd71a572421883fad2582fba22d7b225f77d6280f14feb352d8d7cb2b7b3",
    "4.14.159": "4e6c7aa828b1e6abb7c3a98e7414a588064690202817a22508efea999dc7160d",
}
linux_kernel_headers = use_extension("@linux_kernel_headers//:repositories.bzl", "extension")
def f(v, sha256):
    linux_kernel_headers.kernel(version=v, sha256=sha256)

[f(v[0],v[1])  for v in kernel_versions_integrity.items()]